/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutAnimationLayoutMainLayoutHomeImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome'
import { Route as LayoutAnimationLayoutAuthRegisterImport } from './routes/_layoutAnimation/_layoutAuth/register'
import { Route as LayoutAnimationLayoutAuthOauthRedirectImport } from './routes/_layoutAnimation/_layoutAuth/oauth-redirect'
import { Route as LayoutAnimationLayoutAuthLoginImport } from './routes/_layoutAnimation/_layoutAuth/login'
import { Route as LayoutAnimationLayoutMainLayoutHomeFriendsImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome/friends'
import { Route as LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome/channels.@me.$channelId'

// Create Virtual Routes

const SplashscreenLazyImport = createFileRoute('/splashscreen')()
const LayoutAnimationLazyImport = createFileRoute('/_layoutAnimation')()
const LayoutAnimationLayoutMainLazyImport = createFileRoute(
  '/_layoutAnimation/_layoutMain',
)()
const LayoutAnimationLayoutAuthLazyImport = createFileRoute(
  '/_layoutAnimation/_layoutAuth',
)()
const LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyImport = createFileRoute(
  '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me',
)()

// Create/Update Routes

const SplashscreenLazyRoute = SplashscreenLazyImport.update({
  id: '/splashscreen',
  path: '/splashscreen',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/splashscreen.lazy').then((d) => d.Route))

const LayoutAnimationLazyRoute = LayoutAnimationLazyImport.update({
  id: '/_layoutAnimation',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_layoutAnimation.lazy').then((d) => d.Route),
)

const LayoutAnimationLayoutMainLazyRoute =
  LayoutAnimationLayoutMainLazyImport.update({
    id: '/_layoutMain',
    getParentRoute: () => LayoutAnimationLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layoutAnimation/_layoutMain.lazy').then((d) => d.Route),
  )

const LayoutAnimationLayoutAuthLazyRoute =
  LayoutAnimationLayoutAuthLazyImport.update({
    id: '/_layoutAuth',
    getParentRoute: () => LayoutAnimationLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layoutAnimation/_layoutAuth.lazy').then((d) => d.Route),
  )

const LayoutAnimationLayoutMainLayoutHomeRoute =
  LayoutAnimationLayoutMainLayoutHomeImport.update({
    id: '/_layoutHome',
    getParentRoute: () => LayoutAnimationLayoutMainLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layoutAnimation/_layoutMain/_layoutHome.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutAnimationLayoutAuthRegisterRoute =
  LayoutAnimationLayoutAuthRegisterImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => LayoutAnimationLayoutAuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layoutAnimation/_layoutAuth/register.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutAnimationLayoutAuthOauthRedirectRoute =
  LayoutAnimationLayoutAuthOauthRedirectImport.update({
    id: '/oauth-redirect',
    path: '/oauth-redirect',
    getParentRoute: () => LayoutAnimationLayoutAuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layoutAnimation/_layoutAuth/oauth-redirect.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutAnimationLayoutAuthLoginRoute =
  LayoutAnimationLayoutAuthLoginImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => LayoutAnimationLayoutAuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_layoutAnimation/_layoutAuth/login.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutAnimationLayoutMainLayoutHomeFriendsRoute =
  LayoutAnimationLayoutMainLayoutHomeFriendsImport.update({
    id: '/friends',
    path: '/friends',
    getParentRoute: () => LayoutAnimationLayoutMainLayoutHomeRoute,
  } as any).lazy(() =>
    import(
      './routes/_layoutAnimation/_layoutMain/_layoutHome/friends.lazy'
    ).then((d) => d.Route),
  )

const LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRoute =
  LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyImport.update({
    id: '/channels/@me',
    path: '/channels/@me',
    getParentRoute: () => LayoutAnimationLayoutMainLayoutHomeRoute,
  } as any).lazy(() =>
    import(
      './routes/_layoutAnimation/_layoutMain/_layoutHome/channels.@me.lazy'
    ).then((d) => d.Route),
  )

const LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute =
  LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdImport.update({
    id: '/$channelId',
    path: '/$channelId',
    getParentRoute: () =>
      LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/_layoutAnimation/_layoutMain/_layoutHome/channels.@me.$channelId.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layoutAnimation': {
      id: '/_layoutAnimation'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLazyImport
      parentRoute: typeof rootRoute
    }
    '/splashscreen': {
      id: '/splashscreen'
      path: '/splashscreen'
      fullPath: '/splashscreen'
      preLoaderRoute: typeof SplashscreenLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layoutAnimation/_layoutAuth': {
      id: '/_layoutAnimation/_layoutAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLayoutAuthLazyImport
      parentRoute: typeof LayoutAnimationLazyImport
    }
    '/_layoutAnimation/_layoutMain': {
      id: '/_layoutAnimation/_layoutMain'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLayoutMainLazyImport
      parentRoute: typeof LayoutAnimationLazyImport
    }
    '/_layoutAnimation/_layoutAuth/login': {
      id: '/_layoutAnimation/_layoutAuth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutAnimationLayoutAuthLoginImport
      parentRoute: typeof LayoutAnimationLayoutAuthLazyImport
    }
    '/_layoutAnimation/_layoutAuth/oauth-redirect': {
      id: '/_layoutAnimation/_layoutAuth/oauth-redirect'
      path: '/oauth-redirect'
      fullPath: '/oauth-redirect'
      preLoaderRoute: typeof LayoutAnimationLayoutAuthOauthRedirectImport
      parentRoute: typeof LayoutAnimationLayoutAuthLazyImport
    }
    '/_layoutAnimation/_layoutAuth/register': {
      id: '/_layoutAnimation/_layoutAuth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof LayoutAnimationLayoutAuthRegisterImport
      parentRoute: typeof LayoutAnimationLayoutAuthLazyImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeImport
      parentRoute: typeof LayoutAnimationLayoutMainLazyImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome/friends': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeFriendsImport
      parentRoute: typeof LayoutAnimationLayoutMainLayoutHomeImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me'
      path: '/channels/@me'
      fullPath: '/channels/@me'
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyImport
      parentRoute: typeof LayoutAnimationLayoutMainLayoutHomeImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId'
      path: '/$channelId'
      fullPath: '/channels/@me/$channelId'
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdImport
      parentRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyImport
    }
  }
}

// Create and export the route tree

interface LayoutAnimationLayoutAuthLazyRouteChildren {
  LayoutAnimationLayoutAuthLoginRoute: typeof LayoutAnimationLayoutAuthLoginRoute
  LayoutAnimationLayoutAuthOauthRedirectRoute: typeof LayoutAnimationLayoutAuthOauthRedirectRoute
  LayoutAnimationLayoutAuthRegisterRoute: typeof LayoutAnimationLayoutAuthRegisterRoute
}

const LayoutAnimationLayoutAuthLazyRouteChildren: LayoutAnimationLayoutAuthLazyRouteChildren =
  {
    LayoutAnimationLayoutAuthLoginRoute: LayoutAnimationLayoutAuthLoginRoute,
    LayoutAnimationLayoutAuthOauthRedirectRoute:
      LayoutAnimationLayoutAuthOauthRedirectRoute,
    LayoutAnimationLayoutAuthRegisterRoute:
      LayoutAnimationLayoutAuthRegisterRoute,
  }

const LayoutAnimationLayoutAuthLazyRouteWithChildren =
  LayoutAnimationLayoutAuthLazyRoute._addFileChildren(
    LayoutAnimationLayoutAuthLazyRouteChildren,
  )

interface LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteChildren {
  LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute
}

const LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteChildren: LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteChildren =
  {
    LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute:
      LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute,
  }

const LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteWithChildren =
  LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRoute._addFileChildren(
    LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteChildren,
  )

interface LayoutAnimationLayoutMainLayoutHomeRouteChildren {
  LayoutAnimationLayoutMainLayoutHomeFriendsRoute: typeof LayoutAnimationLayoutMainLayoutHomeFriendsRoute
  LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteWithChildren
}

const LayoutAnimationLayoutMainLayoutHomeRouteChildren: LayoutAnimationLayoutMainLayoutHomeRouteChildren =
  {
    LayoutAnimationLayoutMainLayoutHomeFriendsRoute:
      LayoutAnimationLayoutMainLayoutHomeFriendsRoute,
    LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRoute:
      LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteWithChildren,
  }

const LayoutAnimationLayoutMainLayoutHomeRouteWithChildren =
  LayoutAnimationLayoutMainLayoutHomeRoute._addFileChildren(
    LayoutAnimationLayoutMainLayoutHomeRouteChildren,
  )

interface LayoutAnimationLayoutMainLazyRouteChildren {
  LayoutAnimationLayoutMainLayoutHomeRoute: typeof LayoutAnimationLayoutMainLayoutHomeRouteWithChildren
}

const LayoutAnimationLayoutMainLazyRouteChildren: LayoutAnimationLayoutMainLazyRouteChildren =
  {
    LayoutAnimationLayoutMainLayoutHomeRoute:
      LayoutAnimationLayoutMainLayoutHomeRouteWithChildren,
  }

const LayoutAnimationLayoutMainLazyRouteWithChildren =
  LayoutAnimationLayoutMainLazyRoute._addFileChildren(
    LayoutAnimationLayoutMainLazyRouteChildren,
  )

interface LayoutAnimationLazyRouteChildren {
  LayoutAnimationLayoutAuthLazyRoute: typeof LayoutAnimationLayoutAuthLazyRouteWithChildren
  LayoutAnimationLayoutMainLazyRoute: typeof LayoutAnimationLayoutMainLazyRouteWithChildren
}

const LayoutAnimationLazyRouteChildren: LayoutAnimationLazyRouteChildren = {
  LayoutAnimationLayoutAuthLazyRoute:
    LayoutAnimationLayoutAuthLazyRouteWithChildren,
  LayoutAnimationLayoutMainLazyRoute:
    LayoutAnimationLayoutMainLazyRouteWithChildren,
}

const LayoutAnimationLazyRouteWithChildren =
  LayoutAnimationLazyRoute._addFileChildren(LayoutAnimationLazyRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutAnimationLayoutMainLayoutHomeRouteWithChildren
  '/splashscreen': typeof SplashscreenLazyRoute
  '/login': typeof LayoutAnimationLayoutAuthLoginRoute
  '/oauth-redirect': typeof LayoutAnimationLayoutAuthOauthRedirectRoute
  '/register': typeof LayoutAnimationLayoutAuthRegisterRoute
  '/friends': typeof LayoutAnimationLayoutMainLayoutHomeFriendsRoute
  '/channels/@me': typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteWithChildren
  '/channels/@me/$channelId': typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutAnimationLayoutMainLayoutHomeRouteWithChildren
  '/splashscreen': typeof SplashscreenLazyRoute
  '/login': typeof LayoutAnimationLayoutAuthLoginRoute
  '/oauth-redirect': typeof LayoutAnimationLayoutAuthOauthRedirectRoute
  '/register': typeof LayoutAnimationLayoutAuthRegisterRoute
  '/friends': typeof LayoutAnimationLayoutMainLayoutHomeFriendsRoute
  '/channels/@me': typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteWithChildren
  '/channels/@me/$channelId': typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layoutAnimation': typeof LayoutAnimationLazyRouteWithChildren
  '/splashscreen': typeof SplashscreenLazyRoute
  '/_layoutAnimation/_layoutAuth': typeof LayoutAnimationLayoutAuthLazyRouteWithChildren
  '/_layoutAnimation/_layoutMain': typeof LayoutAnimationLayoutMainLazyRouteWithChildren
  '/_layoutAnimation/_layoutAuth/login': typeof LayoutAnimationLayoutAuthLoginRoute
  '/_layoutAnimation/_layoutAuth/oauth-redirect': typeof LayoutAnimationLayoutAuthOauthRedirectRoute
  '/_layoutAnimation/_layoutAuth/register': typeof LayoutAnimationLayoutAuthRegisterRoute
  '/_layoutAnimation/_layoutMain/_layoutHome': typeof LayoutAnimationLayoutMainLayoutHomeRouteWithChildren
  '/_layoutAnimation/_layoutMain/_layoutHome/friends': typeof LayoutAnimationLayoutMainLayoutHomeFriendsRoute
  '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me': typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeLazyRouteWithChildren
  '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId': typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/splashscreen'
    | '/login'
    | '/oauth-redirect'
    | '/register'
    | '/friends'
    | '/channels/@me'
    | '/channels/@me/$channelId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/splashscreen'
    | '/login'
    | '/oauth-redirect'
    | '/register'
    | '/friends'
    | '/channels/@me'
    | '/channels/@me/$channelId'
  id:
    | '__root__'
    | '/_layoutAnimation'
    | '/splashscreen'
    | '/_layoutAnimation/_layoutAuth'
    | '/_layoutAnimation/_layoutMain'
    | '/_layoutAnimation/_layoutAuth/login'
    | '/_layoutAnimation/_layoutAuth/oauth-redirect'
    | '/_layoutAnimation/_layoutAuth/register'
    | '/_layoutAnimation/_layoutMain/_layoutHome'
    | '/_layoutAnimation/_layoutMain/_layoutHome/friends'
    | '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me'
    | '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutAnimationLazyRoute: typeof LayoutAnimationLazyRouteWithChildren
  SplashscreenLazyRoute: typeof SplashscreenLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutAnimationLazyRoute: LayoutAnimationLazyRouteWithChildren,
  SplashscreenLazyRoute: SplashscreenLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layoutAnimation",
        "/splashscreen"
      ]
    },
    "/_layoutAnimation": {
      "filePath": "_layoutAnimation.lazy.tsx",
      "children": [
        "/_layoutAnimation/_layoutAuth",
        "/_layoutAnimation/_layoutMain"
      ]
    },
    "/splashscreen": {
      "filePath": "splashscreen.lazy.tsx"
    },
    "/_layoutAnimation/_layoutAuth": {
      "filePath": "_layoutAnimation/_layoutAuth.lazy.tsx",
      "parent": "/_layoutAnimation",
      "children": [
        "/_layoutAnimation/_layoutAuth/login",
        "/_layoutAnimation/_layoutAuth/oauth-redirect",
        "/_layoutAnimation/_layoutAuth/register"
      ]
    },
    "/_layoutAnimation/_layoutMain": {
      "filePath": "_layoutAnimation/_layoutMain.lazy.tsx",
      "parent": "/_layoutAnimation",
      "children": [
        "/_layoutAnimation/_layoutMain/_layoutHome"
      ]
    },
    "/_layoutAnimation/_layoutAuth/login": {
      "filePath": "_layoutAnimation/_layoutAuth/login.tsx",
      "parent": "/_layoutAnimation/_layoutAuth"
    },
    "/_layoutAnimation/_layoutAuth/oauth-redirect": {
      "filePath": "_layoutAnimation/_layoutAuth/oauth-redirect.tsx",
      "parent": "/_layoutAnimation/_layoutAuth"
    },
    "/_layoutAnimation/_layoutAuth/register": {
      "filePath": "_layoutAnimation/_layoutAuth/register.tsx",
      "parent": "/_layoutAnimation/_layoutAuth"
    },
    "/_layoutAnimation/_layoutMain/_layoutHome": {
      "filePath": "_layoutAnimation/_layoutMain/_layoutHome.tsx",
      "parent": "/_layoutAnimation/_layoutMain",
      "children": [
        "/_layoutAnimation/_layoutMain/_layoutHome/friends",
        "/_layoutAnimation/_layoutMain/_layoutHome/channels/@me"
      ]
    },
    "/_layoutAnimation/_layoutMain/_layoutHome/friends": {
      "filePath": "_layoutAnimation/_layoutMain/_layoutHome/friends.tsx",
      "parent": "/_layoutAnimation/_layoutMain/_layoutHome"
    },
    "/_layoutAnimation/_layoutMain/_layoutHome/channels/@me": {
      "filePath": "_layoutAnimation/_layoutMain/_layoutHome/channels.@me.lazy.tsx",
      "parent": "/_layoutAnimation/_layoutMain/_layoutHome",
      "children": [
        "/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId"
      ]
    },
    "/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId": {
      "filePath": "_layoutAnimation/_layoutMain/_layoutHome/channels.@me.$channelId.tsx",
      "parent": "/_layoutAnimation/_layoutMain/_layoutHome/channels/@me"
    }
  }
}
ROUTE_MANIFEST_END */
