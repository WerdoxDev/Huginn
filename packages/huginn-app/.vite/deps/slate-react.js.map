{
  "version": 3,
  "sources": ["../../../../node_modules/.deno/direction@1.0.4/node_modules/direction/index.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/isObject.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_freeGlobal.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_root.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/now.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_trimmedEndIndex.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_baseTrim.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_Symbol.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_getRawTag.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_objectToString.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/_baseGetTag.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/isObjectLike.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/isSymbol.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/toNumber.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/debounce.js", "../../../../node_modules/.deno/lodash@4.17.21/node_modules/lodash/throttle.js", "../../../../node_modules/.deno/is-hotkey@0.2.0/node_modules/is-hotkey/lib/index.js", "../../../../node_modules/.deno/compute-scroll-into-view@3.1.0/node_modules/compute-scroll-into-view/src/index.ts", "../../../../node_modules/.deno/scroll-into-view-if-needed@3.1.0/node_modules/scroll-into-view-if-needed/src/index.ts", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/freeze.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/element.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/global.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/process.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/utils/scheduler.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObservation.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserverController.js", "../../../../node_modules/.deno/@juggle+resize-observer@3.4.0/node_modules/@juggle/resize-observer/lib/ResizeObserver.js", "../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-slate-static.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/environment.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/weak-maps.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/dom.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/key.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/plugin/react-editor.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/diff-text.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/android-input-manager/android-input-manager.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-is-mounted.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-mutation-observer.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/android-input-manager/use-android-input-manager.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/range-list.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/string.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/leaf.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/text.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/element.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-decorate.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-selected.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-children.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-read-only.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-slate.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-track-user-input.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/constants.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/hotkeys.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/restore-dom/restore-dom-manager.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/restore-dom/restore-dom.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/editable.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-focused.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-slate-selector.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/components/slate.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-editor.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/hooks/use-slate-selection.tsx", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/utils/lines.ts", "../../../../node_modules/.deno/slate-react@0.104.0/node_modules/slate-react/src/plugin/with-react.ts"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n", "var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name]) {\n        throw new TypeError('Unknown modifier: \"' + value + '\"');\n      }\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;", "// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n/**\n * This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\n * @public\n */\nexport type ScrollMode = 'always' | 'if-needed'\n\n/** @public */\nexport interface Options {\n  /**\n   * Control the logical scroll position on the y-axis. The spec states that the `block` direction is related to the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode), but this is not implemented yet in this library.\n   * This means that `block: 'start'` aligns to the top edge and `block: 'end'` to the bottom.\n   * @defaultValue 'center'\n   */\n  block?: ScrollLogicalPosition\n  /**\n   * Like `block` this is affected by the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode). In left-to-right pages `inline: 'start'` will align to the left edge. In right-to-left it should be flipped. This will be supported in a future release.\n   * @defaultValue 'nearest'\n   */\n  inline?: ScrollLogicalPosition\n  /**\n   * This is a proposed addition to the spec that you can track here: https://github.com/w3c/csswg-drafts/pull/5677\n   *\n   * This library will be updated to reflect any changes to the spec and will provide a migration path.\n   * To be backwards compatible with `Element.scrollIntoViewIfNeeded` if something is not 100% visible it will count as \"needs scrolling\". If you need a different visibility ratio your best option would be to implement an [Intersection Observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API).\n   * @defaultValue 'always'\n   */\n  scrollMode?: ScrollMode\n  /**\n   * By default there is no boundary. All the parent elements of your target is checked until it reaches the viewport ([`document.scrollingElement`](https://developer.mozilla.org/en-US/docs/Web/API/document/scrollingElement)) when calculating layout and what to scroll.\n   * By passing a boundary you can short-circuit this loop depending on your needs:\n   * \n   * - Prevent the browser window from scrolling.\n   * - Scroll elements into view in a list, without scrolling container elements.\n   * \n   * You can also pass a function to do more dynamic checks to override the scroll scoping:\n   * \n   * ```js\n   * let actions = compute(target, {\n   *   boundary: (parent) => {\n   *     // By default `overflow: hidden` elements are allowed, only `overflow: visible | clip` is skipped as\n   *     // this is required by the CSSOM spec\n   *     if (getComputedStyle(parent)['overflow'] === 'hidden') {\n   *       return false\n   *     }\n\n   *     return true\n   *   },\n   * })\n   * ```\n   * @defaultValue null\n   */\n  boundary?: Element | ((parent: Element) => boolean) | null\n  /**\n   * New option that skips auto-scrolling all nodes with overflow: hidden set\n   * See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\n   * @defaultValue false\n   * @public\n   */\n  skipOverflowHiddenElements?: boolean\n}\n\n/** @public */\nexport interface ScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nconst isElement = (el: any): el is Element =>\n  typeof el === 'object' && el != null && el.nodeType === 1\n\nconst canOverflow = (\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) => {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nconst getFrameElement = (el: Element) => {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nconst isHiddenByFrame = (el: Element): boolean => {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nconst isScrollable = (el: Element, skipOverflowHiddenElements?: boolean) => {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nconst alignNearest = (\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) => {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nconst getParentElement = (element: Node): Element | null => {\n  const parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\nconst getScrollMargins = (target: Element) => {\n  const computedStyle = window.getComputedStyle(target)\n  return {\n    top: parseFloat(computedStyle.scrollMarginTop) || 0,\n    right: parseFloat(computedStyle.scrollMarginRight) || 0,\n    bottom: parseFloat(computedStyle.scrollMarginBottom) || 0,\n    left: parseFloat(computedStyle.scrollMarginLeft) || 0,\n  }\n}\n\n/** @public */\nexport const compute = (target: Element, options: Options): ScrollAction[] => {\n  if (typeof document === 'undefined') {\n    // If there's no DOM we assume it's not in a browser environment\n    return []\n  }\n\n  const { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = window.visualViewport?.width ?? innerWidth\n  const viewportHeight = window.visualViewport?.height ?? innerHeight\n  const { scrollX, scrollY } = window\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n  const {\n    top: marginTop,\n    right: marginRight,\n    bottom: marginBottom,\n    left: marginLeft,\n  } = getScrollMargins(target)\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop - marginTop\n      : block === 'end'\n      ? targetBottom + marginBottom\n      : targetTop + targetHeight / 2 - marginTop + marginBottom // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2 - marginLeft + marginRight\n      : inline === 'end'\n      ? targetRight + marginRight\n      : targetLeft - marginLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: ScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    const scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    const scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          scrollY,\n          scrollY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          scrollY + targetBlock,\n          scrollY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          scrollX,\n          scrollX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          scrollX + targetInline,\n          scrollX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + scrollY)\n      inlineScroll = Math.max(0, inlineScroll + scrollX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll =\n        scaleY === 0\n          ? 0\n          : Math.max(\n              0,\n              Math.min(\n                scrollTop + blockScroll / scaleY,\n                frame.scrollHeight - height / scaleY + scrollbarHeight\n              )\n            )\n      inlineScroll =\n        scaleX === 0\n          ? 0\n          : Math.max(\n              0,\n              Math.min(\n                scrollLeft + inlineScroll / scaleX,\n                frame.scrollWidth - width / scaleX + scrollbarWidth\n              )\n            )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n", "import { compute } from 'compute-scroll-into-view'\nimport type {\n  Options as BaseOptions,\n  ScrollAction,\n} from 'compute-scroll-into-view'\n\n/** @public */\nexport type Options<T = unknown> =\n  | StandardBehaviorOptions\n  | CustomBehaviorOptions<T>\n\n/**\n * Only scrolls if the `node` is partially out of view:\n * ```ts\n * scrollIntoView(node, { scrollMode: 'if-needed' })\n * ```\n * Skips scrolling `overflow: hidden` elements:\n * ```ts\n * scrollIntoView(node, { skipOverflowHiddenElements: true })\n * ```\n * When scrolling is needed do the least and smoothest scrolling possible:\n * ```ts\n * scrollIntoView(node, {\n *   behavior: 'smooth',\n *   scrollMode: 'if-needed',\n *   block: 'nearest',\n *   inline: 'nearest',\n * })\n * ```\n * @public\n */\nexport interface StandardBehaviorOptions extends BaseOptions {\n  /**\n   * @defaultValue 'auto\n   */\n  behavior?: ScrollBehavior\n}\n\n/** @public */\nexport interface CustomBehaviorOptions<T = unknown> extends BaseOptions {\n  behavior: CustomScrollBehaviorCallback<T>\n}\n\n/** @public */\nexport type CustomScrollBehaviorCallback<T = unknown> = (\n  actions: ScrollAction[]\n) => T\n\nconst isStandardScrollBehavior = (\n  options: any\n): options is StandardBehaviorOptions =>\n  options === Object(options) && Object.keys(options).length !== 0\n\nconst isCustomScrollBehavior = <T = unknown>(\n  options: any\n): options is CustomBehaviorOptions<T> =>\n  typeof options === 'object' ? typeof options.behavior === 'function' : false\n\nconst getOptions = (options: any): StandardBehaviorOptions => {\n  // Handle alignToTop for legacy reasons, to be compatible with the spec\n  if (options === false) {\n    return { block: 'end', inline: 'nearest' }\n  }\n\n  if (isStandardScrollBehavior(options)) {\n    // compute.ts ensures the defaults are block: 'center' and inline: 'nearest', to conform to the spec\n    return options\n  }\n\n  // if options = {}, options = true or options = null, based on w3c web platform test\n  return { block: 'start', inline: 'nearest' }\n}\n\nconst getScrollMargins = (target: Element) => {\n  const computedStyle = window.getComputedStyle(target)\n  return {\n    top: parseFloat(computedStyle.scrollMarginTop) || 0,\n    right: parseFloat(computedStyle.scrollMarginRight) || 0,\n    bottom: parseFloat(computedStyle.scrollMarginBottom) || 0,\n    left: parseFloat(computedStyle.scrollMarginLeft) || 0,\n  }\n}\n\n// Determine if the element is part of the document (including shadow dom)\n// Derived from code of Andy Desmarais\n// https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\nconst isInDocument = (element: Node) => {\n  let currentElement = element\n  while (currentElement && currentElement.parentNode) {\n    if (currentElement.parentNode === document) {\n      return true\n    } else if (currentElement.parentNode instanceof ShadowRoot) {\n      currentElement = (currentElement.parentNode as ShadowRoot).host\n    } else {\n      currentElement = currentElement.parentNode\n    }\n  }\n  return false\n}\n\n/**\n * Scrolls the given element into view, with options for when, and how.\n * Supports the same `options` as [`Element.prototype.scrollIntoView`](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView) with additions such as `scrollMode`, `behavior: Function` and `skipOverflowHiddenElements`.\n * @public\n */\nfunction scrollIntoView(\n  target: Element,\n  options?: StandardBehaviorOptions | boolean\n): void\n/**\n * Scrolls the given element into view, with options for when, and how.\n * Supports the same `options` as [`Element.prototype.scrollIntoView`](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView) with additions such as `scrollMode`, `behavior: Function` and `skipOverflowHiddenElements`.\n *\n * You can set the expected return type for `behavior: Function`:\n * ```ts\n * await scrollIntoView<Promise<boolean[]>>(node, {\n *   behavior: async actions => {\n *     return Promise.all(actions.map(\n *       // animate() resolves to `true` if anything was animated, `false` if the element already were in the end state\n *       ({ el, left, top }) => animate(el, {scroll: {left, top}})\n *     ))\n *   }\n * })\n * ```\n * @public\n */\nfunction scrollIntoView<T>(\n  target: Element,\n  options: CustomBehaviorOptions<T>\n): T\nfunction scrollIntoView<T = unknown>(\n  target: Element,\n  options?: StandardBehaviorOptions | CustomBehaviorOptions<T> | boolean\n): T | void {\n  // Browsers treats targets that aren't in the dom as a no-op and so should we\n  if (!target.isConnected || !isInDocument(target)) {\n    return\n  }\n\n  const margins = getScrollMargins(target)\n\n  if (isCustomScrollBehavior<T>(options)) {\n    return options.behavior(compute(target, options))\n  }\n\n  const behavior = typeof options === 'boolean' ? undefined : options?.behavior\n\n  for (const { el, top, left } of compute(target, getOptions(options))) {\n    const adjustedTop = top - margins.top + margins.bottom\n    const adjustedLeft = left - margins.left + margins.right\n    el.scroll({ top: adjustedTop, left: adjustedLeft, behavior })\n  }\n}\n\nexport default scrollIntoView\n", "var resizeObservers = [];\nexport { resizeObservers };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n", "var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n", "var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n", "export var freeze = function (obj) { return Object.freeze(obj); };\n", "import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n", "import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n", "var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n", "export var global = typeof window !== 'undefined' ? window : {};\n", "import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n", "import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n", "import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n", "import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n", "var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n", "import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n", "import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n", "import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n", "var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n", "import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n", "import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n", "export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import React from 'react'\n\nexport const REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10)\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_WEBKIT =\n  typeof navigator !== 'undefined' &&\n  /AppleWebKit(?!.*Chrome)/i.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_ANDROID_CHROME_LEGACY =\n  IS_ANDROID &&\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser (not including mac wechat)\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' &&\n  /.*Wechat/.test(navigator.userAgent) &&\n  !/.*MacWechat/.test(navigator.userAgent) // avoid lookbehind (buggy in safari < 16.4)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// Check if the browser is Safari and older than 17\nexport const IS_SAFARI_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Safari/.test(navigator.userAgent) &&\n  /Version\\/(\\d+)/.test(navigator.userAgent) &&\n  (navigator.userAgent.match(/Version\\/(\\d+)/)?.[1]\n    ? parseInt(navigator.userAgent.match(/Version\\/(\\d+)/)?.[1]!, 10) < 17\n    : false)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n", "import { Ancestor, Editor, Node, Operation, Range, RangeRef, Text } from 'slate'\nimport { Action } from '../hooks/android-input-manager/android-input-manager'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<Editor, HTMLElement> =\n  new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<Editor, RangeRef | null> =\n  new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<\n  Editor,\n  (options?: { operation?: Operation }) => void\n>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<Editor, () => void> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<Editor, Partial<Text> | null> =\n  new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<Editor, TextDiff[]> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<Editor, Action | null> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<Editor, Range | null> =\n  new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = Symbol('placeholder') as unknown as string\nexport const MARK_PLACEHOLDER_SYMBOL = Symbol(\n  'mark-placeholder'\n) as unknown as string\n", "/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: (typeof Selection)['constructor']\n    DataTransfer: (typeof DataTransfer)['constructor']\n    Node: (typeof Node)['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines whether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = (node: Node | null) => {\n  let parent = node && node.parentNode\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true\n    }\n    parent = parent.parentNode\n  }\n  return false\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (\n  dataTransfer: DataTransfer,\n  clipboardFormatKey = 'x-slate-fragment'\n): DataTransfer => {\n  if (!dataTransfer.getData(`application/${clipboardFormatKey}`)) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData(`application/${clipboardFormatKey}`, fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: ReactEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = ReactEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n\n/**\n * Retrieves the deepest active element in the DOM, considering nested shadow DOMs.\n */\nexport const getActiveElement = () => {\n  let activeElement = document.activeElement\n\n  while (activeElement?.shadowRoot && activeElement.shadowRoot?.activeElement) {\n    activeElement = activeElement?.shadowRoot?.activeElement\n  }\n\n  return activeElement\n}\n", "/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n", "import {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n} from 'slate'\nimport { TextDiff } from '../utils/diff-text'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  DOMText,\n  hasShadowRoot,\n  isDOMElement,\n  isDOMNode,\n  isDOMSelection,\n  normalizeDOMPoint,\n} from '../utils/dom'\nimport { IS_ANDROID, IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n}\n\nexport interface ReactEditorInterface {\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs: (editor: Editor) => TextDiff[] | undefined\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush: (editor: Editor) => void\n\n  /**\n   * Blur the editor.\n   */\n  blur: (editor: ReactEditor) => void\n\n  /**\n   * Deselect the editor.\n   */\n  deselect: (editor: ReactEditor) => void\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n  findDocumentOrShadowRoot: (editor: ReactEditor) => Document | ShadowRoot\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n  findEventRange: (editor: ReactEditor, event: any) => Range\n\n  /**\n   * Find a key for a Slate node.\n   */\n  findKey: (editor: ReactEditor, node: Node) => Key\n\n  /**\n   * Find the path of Slate node.\n   */\n  findPath: (editor: ReactEditor, node: Node) => Path\n\n  /**\n   * Focus the editor.\n   */\n  focus: (editor: ReactEditor, options?: { retries: number }) => void\n\n  /**\n   * Return the host window of the current editor.\n   */\n  getWindow: (editor: ReactEditor) => Window\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n  hasDOMNode: (\n    editor: ReactEditor,\n    target: DOMNode,\n    options?: { editable?: boolean }\n  ) => boolean\n\n  /**\n   * Check if the target is editable and in the editor.\n   */\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   *\n   */\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n\n  /**\n   * Check if the target can be selectable\n   */\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Check if the target is in the editor.\n   */\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n  insertData: (editor: ReactEditor, data: DataTransfer) => void\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n  insertFragmentData: (editor: ReactEditor, data: DataTransfer) => boolean\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n  insertTextData: (editor: ReactEditor, data: DataTransfer) => boolean\n\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n  isComposing: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the editor is focused.\n   */\n  isFocused: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n  isReadOnly: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the target is inside void and in an non-readonly editor.\n   */\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n  setFragmentData: (\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n  toDOMNode: (editor: ReactEditor, node: Node) => HTMLElement\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n  toDOMPoint: (editor: ReactEditor, point: Point) => DOMPoint\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n  toDOMRange: (editor: ReactEditor, range: Range) => DOMRange\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n  toSlateNode: (editor: ReactEditor, domNode: DOMNode) => Node\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n  toSlatePoint: <T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Point | null : Point\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n  toSlateRange: <T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Range | null : Range\n}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor: ReactEditorInterface = {\n  androidPendingDiffs: editor => EDITOR_TO_PENDING_DIFFS.get(editor),\n\n  androidScheduleFlush: editor => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  blur: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  deselect: editor => {\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  findDocumentOrShadowRoot: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  findEventRange: (editor, event) => {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  findKey: (editor, node) => {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  findPath: (editor, node) => {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  focus: (editor, options = { retries: 5 }) => {\n    // Return if already focused\n    if (IS_FOCUSED.get(editor)) {\n      return\n    }\n\n    // Retry setting focus if the editor has pending operations.\n    // The DOM (selection) is unstable while changes are applied.\n    // Retry until retries are exhausted or editor is focused.\n    if (options.retries <= 0) {\n      throw new Error(\n        'Could not set focus, editor seems stuck with pending operations'\n      )\n    }\n    if (editor.operations.length > 0) {\n      setTimeout(() => {\n        ReactEditor.focus(editor, { retries: options.retries - 1 })\n      }, 10)\n      return\n    }\n\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    if (root.activeElement !== el) {\n      // Ensure that the DOM selection state is set to the editor's selection\n      if (editor.selection && root instanceof Document) {\n        const domSelection = root.getSelection()\n        const domRange = ReactEditor.toDOMRange(editor, editor.selection)\n        domSelection?.removeAllRanges()\n        domSelection?.addRange(domRange)\n      }\n      // Create a new selection in the top of the document if missing\n      if (!editor.selection) {\n        Transforms.select(editor, Editor.start(editor, []))\n        editor.onChange()\n      }\n      // IS_FOCUSED should be set before calling el.focus() to ensure that\n      // FocusedContext is updated to the correct value\n      IS_FOCUSED.set(editor, true)\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  getWindow: editor => {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  hasDOMNode: (editor, target, options = {}) => {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (\n        isDOMElement(target) ? target : target.parentElement\n      ) as HTMLElement\n    } catch (err) {\n      if (\n        err instanceof Error &&\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  hasEditableTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true }),\n\n  hasRange: (editor, range) => {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  hasSelectableTarget: (editor, target) =>\n    ReactEditor.hasEditableTarget(editor, target) ||\n    ReactEditor.isTargetInsideNonReadonlyVoid(editor, target),\n\n  hasTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) && ReactEditor.hasDOMNode(editor, target),\n\n  insertData: (editor, data) => {\n    editor.insertData(data)\n  },\n\n  insertFragmentData: (editor, data) => editor.insertFragmentData(data),\n\n  insertTextData: (editor, data) => editor.insertTextData(data),\n\n  isComposing: editor => {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  isFocused: editor => !!IS_FOCUSED.get(editor),\n\n  isReadOnly: editor => !!IS_READ_ONLY.get(editor),\n\n  isTargetInsideNonReadonlyVoid: (editor, target) => {\n    if (IS_READ_ONLY.get(editor)) return false\n\n    const slateNode =\n      ReactEditor.hasTarget(editor, target) &&\n      ReactEditor.toSlateNode(editor, target)\n    return Element.isElement(slateNode) && Editor.isVoid(editor, slateNode)\n  },\n\n  setFragmentData: (editor, data, originEvent) =>\n    editor.setFragmentData(data, originEvent),\n\n  toDOMNode: (editor, node) => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  toDOMPoint: (editor, point) => {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  toDOMRange: (editor, range) => {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (\n      isDOMElement(startNode) ? startNode : startNode.parentElement\n    ) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (\n      isDOMElement(endNode) ? endNode : endNode.parentElement\n    ) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  toSlateNode: (editor, domNode) => {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  toSlatePoint: <T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point => {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && ReactEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = ReactEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          ReactEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  toSlateRange: <T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range => {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        // COMPAT: In firefox the normal seletion way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domRange.rangeCount > 1) {\n          focusNode = domRange.focusNode // Focus node works fine\n          const firstRange = domRange.getRangeAt(0)\n          const lastRange = domRange.getRangeAt(domRange.rangeCount - 1)\n\n          // Here we are in the contenteditable mode of a table in firefox\n          if (\n            focusNode instanceof HTMLTableRowElement &&\n            firstRange.startContainer instanceof HTMLTableRowElement &&\n            lastRange.startContainer instanceof HTMLTableRowElement\n          ) {\n            // HTMLElement, becouse Element is a slate element\n            function getLastChildren(element: HTMLElement): HTMLElement {\n              if (element.childElementCount > 0) {\n                return getLastChildren(<HTMLElement>element.children[0])\n              } else {\n                return element\n              }\n            }\n\n            const firstNodeRow = <HTMLTableRowElement>firstRange.startContainer\n            const lastNodeRow = <HTMLTableRowElement>lastRange.startContainer\n\n            // This should never fail as \"The HTMLElement interface represents any HTML element.\"\n            const firstNode = getLastChildren(\n              <HTMLElement>firstNodeRow.children[firstRange.startOffset]\n            )\n            const lastNode = getLastChildren(\n              <HTMLElement>lastNodeRow.children[lastRange.startOffset]\n            )\n\n            // Zero, as we allways take the right one as the anchor point\n            focusOffset = 0\n\n            if (lastNode.childNodes.length > 0) {\n              anchorNode = lastNode.childNodes[0]\n            } else {\n              anchorNode = lastNode\n            }\n\n            if (firstNode.childNodes.length > 0) {\n              focusNode = firstNode.childNodes[0]\n            } else {\n              focusNode = firstNode\n            }\n\n            if (lastNode instanceof HTMLElement) {\n              anchorOffset = (<HTMLElement>lastNode).innerHTML.length\n            } else {\n              // Fallback option\n              anchorOffset = 0\n            }\n          } else {\n            // This is the read only mode of a firefox table\n            // Right to left\n            if (firstRange.startContainer === focusNode) {\n              anchorNode = lastRange.endContainer\n              anchorOffset = lastRange.endOffset\n              focusOffset = firstRange.startOffset\n            } else {\n              // Left to right\n              anchorNode = firstRange.startContainer\n              anchorOffset = firstRange.endOffset\n              focusOffset = lastRange.startOffset\n            }\n          }\n        } else {\n          anchorNode = domRange.anchorNode\n          anchorOffset = domRange.anchorOffset\n          focusNode = domRange.focusNode\n          focusOffset = domRange.focusOffset\n        }\n\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        // IsCollapsed might not work in firefox, but this will\n        if ((IS_CHROME && hasShadowRoot(anchorNode)) || IS_FIREFOX) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    // COMPAT: Firefox sometimes includes an extra \\n (rendered by TextString\n    // when isTrailing is true) in the focusOffset, resulting in an invalid\n    // Slate point. (2023/11/01)\n    if (\n      IS_FIREFOX &&\n      focusNode.textContent?.endsWith('\\n\\n') &&\n      focusOffset === focusNode.textContent.length\n    ) {\n      focusOffset--\n    }\n\n    // COMPAT: Triple-clicking a word in chrome will sometimes place the focus\n    // inside a `contenteditable=\"false\"` DOM node following the word, which\n    // will cause `toSlatePoint` to throw an error. (2023/03/07)\n    if (\n      'getAttribute' in focusNode &&\n      (focusNode as HTMLElement).getAttribute('contenteditable') === 'false' &&\n      (focusNode as HTMLElement).getAttribute('data-slate-void') !== 'true'\n    ) {\n      focusNode = anchorNode\n      focusOffset = anchorNode.textContent?.length || 0\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      {\n        exactMatch,\n        suppressThrow,\n      }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return range as unknown as T extends true ? Range | null : Range\n  },\n}\n", "import {\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Text,\n  Element,\n} from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nexport function applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n", "import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from '../../utils/diff-text'\nimport { isDOMSelection, isTrackedMutation } from '../../utils/dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n} from '../../utils/weak-maps'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        const [start, end] = Range.edges(targetRange)\n        const leaf = Node.leaf(editor, start.path)\n\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            targetRange = { anchor: end, focus: end }\n          }\n        }\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      const [start, end] = Range.edges(targetRange)\n      const [leaf, path] = Editor.leaf(editor, start.path)\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            storeDiff(start.path, diff)\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n", "import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n", "import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n", "import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n", "import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from '../../utils/weak-maps'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n", "import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (\n  obj1: { [key: string]: unknown },\n  obj2: { [key: string]: unknown }\n) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\nconst isDecorationFlagsEqual = (range: Range, other: Range) => {\n  const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n  const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n  return (\n    range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] &&\n    shallowCompare(rangeOwnProps, otherOwnProps)\n  )\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isElementDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isTextDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    // compare only offsets because paths doesn't matter for text\n    if (\n      range.anchor.offset !== other.anchor.offset ||\n      range.focus.offset !== other.focus.offset ||\n      !isDecorationFlagsEqual(range, other)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n", "import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from '../utils/environment'\nimport { MARK_PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = Boolean(leaf[MARK_PLACEHOLDER_SYMBOL])\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes: {\n    'data-slate-zero-width': string\n    'data-slate-length': number\n    'data-slate-mark-placeholder'?: boolean\n  } = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n", "import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { JSX } from 'react'\nimport { Element, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_WEBKIT, IS_ANDROID } from '../utils/environment'\n\n// Delay the placeholder on Android to prevent the keyboard from closing.\n// (https://github.com/ianstormtaylor/slate/pull/5368)\nconst PLACEHOLDER_DELAY = IS_ANDROID ? 300 : 0\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = Boolean(leaf[PLACEHOLDER_SYMBOL])\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder, so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, PLACEHOLDER_DELAY)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n", "import React, { useCallback, useRef } from 'react'\nimport { Element, Range, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { isTextDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const { decorations, isLast, parent, renderPlaceholder, renderLeaf, text } =\n    props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n  return (\n    <span data-slate-node=\"text\" ref={callbackRef}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n", "import getDirection from 'direction'\nimport React, { useCallback } from 'react'\nimport { JSX } from 'react'\nimport { Editor, Element as SlateElement, Node, Range } from 'slate'\nimport { ReactEditor, useReadOnly, useSlateStatic } from '..'\nimport useChildren from '../hooks/use-children'\nimport { isElementDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\nimport Text from './text'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n", "import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n", "import React from 'react'\nimport { Ancestor, Descendant, Editor, Element, Range } from 'slate'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport { useDecorate } from './use-decorate'\nimport { SelectedContext } from './use-selected'\nimport { useSlateStatic } from './use-slate-static'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n", "import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n", "import { useCallback, useEffect, useRef } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n", "export const TRIPLE_CLICK = 3\n", "import { isHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[<keyof typeof HOTKEYS>key]\n  const apple = APPLE_HOTKEYS[<keyof typeof APPLE_HOTKEYS>key]\n  const windows = WINDOWS_HOTKEYS[<keyof typeof WINDOWS_HOTKEYS>key]\n  const isGeneric = generic && isHotkey(generic)\n  const isApple = apple && isHotkey(apple)\n  const isWindows = windows && isHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n", "import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from '../../utils/dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n", "import React, {\n  Component,\n  ComponentType,\n  ContextType,\n  ReactNode,\n  RefObject,\n} from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  children?: ReactNode\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n", "import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport { JSX } from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { TRIPLE_CLICK } from '../utils/constants'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getActiveElement,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_WEBKIT,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n  IS_SAFARI_LEGACY,\n} from '../utils/environment'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const defaultRenderPlaceholder = useCallback(\n    (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n    []\n  )\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = defaultRenderPlaceholder,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style: userStyle = {},\n    as: Component = 'div',\n    disableDefaultStyles = false,\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n  const [placeholderHeight, setPlaceholderHeight] = useState<\n    number | undefined\n  >()\n  const processing = useRef(false)\n\n  const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n      hasMarkPlaceholder: false,\n    }),\n    []\n  )\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  /**\n   * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n   *\n   * It is defined as a reference to simplify hook dependencies and clarify that\n   * it needs to be initialized.\n   */\n  const androidInputManagerRef = useRef<\n    AndroidInputManager | null | undefined\n  >()\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useMemo(\n    () =>\n      throttle(() => {\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const root = el.getRootNode()\n\n        if (\n          IS_SAFARI_LEGACY &&\n          !processing.current &&\n          IS_WEBKIT &&\n          root instanceof ShadowRoot\n        ) {\n          processing.current = true\n\n          const active = getActiveElement()\n\n          if (active) {\n            document.execCommand('indent')\n          } else {\n            Transforms.deselect(editor)\n          }\n\n          processing.current = false\n          return\n        }\n\n        const androidInputManager = androidInputManagerRef.current\n        if (\n          (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n          (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n          !state.isDraggingInternally\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, anchorNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, focusNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: true,\n            })\n\n            if (range) {\n              if (\n                !ReactEditor.isComposing(editor) &&\n                !androidInputManager?.hasPendingChanges() &&\n                !androidInputManager?.isFlushing()\n              ) {\n                Transforms.select(editor, range)\n              } else {\n                androidInputManager?.handleUserSelect(range)\n              }\n            }\n          }\n\n          // Deselect the editor if the dom selection is not selectable in readonly mode\n          if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n            Transforms.deselect(editor)\n          }\n        }\n      }, 100),\n    [editor, readOnly, state]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  androidInputManagerRef.current = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange,\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      !domSelection ||\n      !ReactEditor.isFocused(editor) ||\n      androidInputManagerRef.current?.hasPendingAction()\n    ) {\n      return\n    }\n\n    const setDomSelection = (forceChange?: boolean) => {\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // Get anchorNode and focusNode\n      const focusNode = domSelection.focusNode\n      let anchorNode\n\n      // COMPAT: In firefox the normal seletion way does not work\n      // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n      if (IS_FIREFOX && domSelection.rangeCount > 1) {\n        const firstRange = domSelection.getRangeAt(0)\n        const lastRange = domSelection.getRangeAt(domSelection.rangeCount - 1)\n\n        // Right to left\n        if (firstRange.startContainer === focusNode) {\n          anchorNode = lastRange.endContainer\n        } else {\n          // Left to right\n          anchorNode = firstRange.startContainer\n        }\n      } else {\n        anchorNode = domSelection.anchorNode\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(anchorNode) &&\n        editorElement.contains(focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (\n        hasDomSelection &&\n        hasDomSelectionInEditor &&\n        selection &&\n        !forceChange\n      ) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true,\n        })\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          if (!state.hasMarkPlaceholder) {\n            return\n          }\n\n          // Ensure selection is inside the mark placeholder\n          if (\n            anchorNode?.parentElement?.hasAttribute(\n              'data-slate-mark-placeholder'\n            )\n          ) {\n            return\n          }\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true\n\n      const newDomRange: DOMRange | null =\n        selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n          domSelection.collapseToEnd()\n        } else if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        scrollSelectionIntoView(editor, newDomRange)\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      return newDomRange\n    }\n\n    // In firefox if there is more then 1 range and we call setDomSelection we remove the ability to select more cells in a table\n    if (domSelection.rangeCount <= 1) {\n      setDomSelection()\n    }\n\n    const ensureSelection =\n      androidInputManagerRef.current?.isFlushing() === 'action'\n\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        state.isUpdatingSelection = false\n      })\n      return\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n    const animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        const ensureDomSelection = (forceChange?: boolean) => {\n          try {\n            const el = ReactEditor.toDOMNode(editor, editor)\n            el.focus()\n\n            setDomSelection(forceChange)\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        }\n\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection()\n\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true)\n          state.isUpdatingSelection = false\n        })\n      }\n    })\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n    }\n  })\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      const el = ReactEditor.toDOMNode(editor, editor)\n      const root = el.getRootNode()\n\n      if (\n        IS_SAFARI_LEGACY &&\n        processing?.current &&\n        IS_WEBKIT &&\n        root instanceof ShadowRoot\n      ) {\n        const ranges = event.getTargetRanges()\n        const range = ranges[0]\n\n        const newRange = new window.Range()\n\n        newRange.setStart(range.startContainer, range.startOffset)\n        newRange.setEnd(range.endContainer, range.endOffset)\n\n        // Translate the DOM Range into a Slate Range\n        const slateRange = ReactEditor.toSlateRange(editor, newRange, {\n          exactMatch: false,\n          suppressThrow: false,\n        })\n\n        Transforms.select(editor, slateRange)\n\n        event.preventDefault()\n        event.stopImmediatePropagation()\n        return\n      }\n      onUserInput()\n\n      if (\n        !readOnly &&\n        ReactEditor.hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n        if (androidInputManagerRef.current) {\n          return androidInputManagerRef.current.handleDOMBeforeInput(event)\n        }\n\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        const isCompositionChange =\n          type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n        // COMPAT: use composition change events as a hint to where we should insert\n        // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n        if (isCompositionChange && ReactEditor.isComposing(editor)) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          const window = ReactEditor.getWindow(editor)\n\n          if (\n            native &&\n            anchorNode &&\n            ReactEditor.hasDOMNode(editor, anchorNode)\n          ) {\n            // Find the last text node inside the anchor.\n            const lastText = window?.document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n\n          // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n          // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n          if (\n            native &&\n            node.parentElement &&\n            window?.getComputedStyle(node.parentElement)?.whiteSpace === 'pre'\n          ) {\n            const block = Editor.above(editor, {\n              at: anchor.path,\n              match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n            })\n\n            if (block && Node.string(block[0]).includes('\\t')) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                !isCompositionChange &&\n                editor.selection &&\n                Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        // Composition change types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (isCompositionChange) {\n          return\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [\n      editor,\n      onDOMSelectionChange,\n      onUserInput,\n      propsOnDOMBeforeInput,\n      readOnly,\n      scheduleOnDOMSelectionChange,\n    ]\n  )\n\n  const callbackRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      if (node == null) {\n        onDOMSelectionChange.cancel()\n        scheduleOnDOMSelectionChange.cancel()\n\n        EDITOR_TO_ELEMENT.delete(editor)\n        NODE_TO_ELEMENT.delete(editor)\n\n        if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n        }\n      } else {\n        // Attach a native DOM event handler for `beforeinput` events, because React's\n        // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n        // real `beforeinput` events sadly... (2019/11/04)\n        // https://github.com/facebook/react/issues/11211\n        if (HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          node.addEventListener('beforeinput', onDOMBeforeInput)\n        }\n      }\n\n      ref.current = node\n    },\n    [\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n      editor,\n      onDOMBeforeInput,\n    ]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  const showPlaceholder =\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n\n  const placeHolderResizeHandler = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      if (placeholderEl && showPlaceholder) {\n        setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n      } else {\n        setPlaceholderHeight(undefined)\n      }\n    },\n    [showPlaceholder]\n  )\n\n  if (showPlaceholder) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      onPlaceholderResize: placeHolderResizeHandler,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  const { marks } = editor\n  state.hasMarkPlaceholder = false\n\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    const { anchor } = editor.selection\n    const leaf = Node.leaf(editor, anchor.path)\n    const { text, ...rest } = leaf\n\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text.equals(leaf, marks as Text, { loose: true })) {\n      state.hasMarkPlaceholder = true\n\n      const unset = Object.fromEntries(\n        Object.keys(rest).map(mark => [mark, null])\n      )\n\n      decorations.push({\n        [MARK_PLACEHOLDER_SYMBOL]: true,\n        ...unset,\n        ...marks,\n\n        anchor,\n        focus: anchor,\n      })\n    }\n  }\n\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      const { selection } = editor\n      if (selection) {\n        const { anchor } = selection\n        const text = Node.leaf(editor, anchor.path)\n\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n          return\n        }\n      }\n\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n    })\n  })\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n          <Component\n            role={readOnly ? undefined : 'textbox'}\n            aria-multiline={readOnly ? undefined : true}\n            {...attributes}\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n            // have to use hacks to make these replacement-based features work.\n            // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n            // mismatch warning app moves to browser. Pass-through consumer props when\n            // not CAN_USE_DOM (SSR) and default to falsy value\n            spellCheck={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.spellCheck\n                : false\n            }\n            autoCorrect={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCorrect\n                : 'false'\n            }\n            autoCapitalize={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCapitalize\n                : 'false'\n            }\n            data-slate-editor\n            data-slate-node=\"value\"\n            // explicitly set this\n            contentEditable={!readOnly}\n            // in some cases, a decoration needs access to the range / selection to decorate a text node,\n            // then you will select the whole text node when you select part the of text\n            // this magic zIndex=\"-1\" will fix it\n            zindex={-1}\n            suppressContentEditableWarning\n            ref={callbackRef}\n            style={{\n              ...(disableDefaultStyles\n                ? {}\n                : {\n                    // Allow positioning relative to the editable element.\n                    position: 'relative',\n                    // Preserve adjacent whitespace and new lines.\n                    whiteSpace: 'pre-wrap',\n                    // Allow words to break if they are too long.\n                    wordWrap: 'break-word',\n                    // Make the minimum height that of the placeholder.\n                    ...(placeholderHeight\n                      ? { minHeight: placeholderHeight }\n                      : {}),\n                  }),\n              // Allow for passed-in styles to override anything.\n              ...userStyle,\n            }}\n            onBeforeInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's leaky polyfill instead just for it. It\n                // only works for the `insertText` input type.\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT &&\n                  !readOnly &&\n                  !isEventHandled(event, attributes.onBeforeInput) &&\n                  ReactEditor.hasSelectableTarget(editor, event.target)\n                ) {\n                  event.preventDefault()\n                  if (!ReactEditor.isComposing(editor)) {\n                    const text = (event as any).data as string\n                    Editor.insertText(editor, text)\n                  }\n                }\n              },\n              [attributes.onBeforeInput, editor, readOnly]\n            )}\n            onInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                if (isEventHandled(event, attributes.onInput)) {\n                  return\n                }\n\n                if (androidInputManagerRef.current) {\n                  androidInputManagerRef.current.handleInput()\n                  return\n                }\n\n                // Flush native operations, as native events will have propogated\n                // and we can correctly compare DOM text values in components\n                // to stop rendering, so that browser functions like autocorrect\n                // and spellcheck work as expected.\n                for (const op of deferredOperations.current) {\n                  op()\n                }\n                deferredOperations.current = []\n              },\n              [attributes.onInput]\n            )}\n            onBlur={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  readOnly ||\n                  state.isUpdatingSelection ||\n                  !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                  isEventHandled(event, attributes.onBlur)\n                ) {\n                  return\n                }\n\n                // COMPAT: If the current `activeElement` is still the previous\n                // one, this is due to the window being blurred when the tab\n                // itself becomes unfocused, so we want to abort early to allow to\n                // editor to stay focused when the tab becomes focused again.\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                if (state.latestElement === root.activeElement) {\n                  return\n                }\n\n                const { relatedTarget } = event\n                const el = ReactEditor.toDOMNode(editor, editor)\n\n                // COMPAT: The event should be ignored if the focus is returning\n                // to the editor from an embedded editable element (eg. an <input>\n                // element inside a void node).\n                if (relatedTarget === el) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving from\n                // the editor to inside a void node's spacer element.\n                if (\n                  isDOMElement(relatedTarget) &&\n                  relatedTarget.hasAttribute('data-slate-spacer')\n                ) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving to a\n                // non- editable section of an element that isn't a void node (eg.\n                // a list item of the check list example).\n                if (\n                  relatedTarget != null &&\n                  isDOMNode(relatedTarget) &&\n                  ReactEditor.hasDOMNode(editor, relatedTarget)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                  if (Element.isElement(node) && !editor.isVoid(node)) {\n                    return\n                  }\n                }\n\n                // COMPAT: Safari doesn't always remove the selection even if the content-\n                // editable element no longer has focus. Refer to:\n                // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                if (IS_WEBKIT) {\n                  const domSelection = root.getSelection()\n                  domSelection?.removeAllRanges()\n                }\n\n                IS_FOCUSED.delete(editor)\n              },\n              [\n                readOnly,\n                state.isUpdatingSelection,\n                state.latestElement,\n                editor,\n                attributes.onBlur,\n              ]\n            )}\n            onClick={useCallback(\n              (event: React.MouseEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onClick) &&\n                  isDOMNode(event.target)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n\n                  // At this time, the Slate document may be arbitrarily different,\n                  // because onClick handlers can change the document before we get here.\n                  // Therefore we must check that this path actually exists,\n                  // and that it still refers to the same node.\n                  if (\n                    !Editor.hasPath(editor, path) ||\n                    Node.get(editor, path) !== node\n                  ) {\n                    return\n                  }\n\n                  if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                    let blockPath = path\n                    if (\n                      !(Element.isElement(node) && Editor.isBlock(editor, node))\n                    ) {\n                      const block = Editor.above(editor, {\n                        match: n =>\n                          Element.isElement(n) && Editor.isBlock(editor, n),\n                        at: path,\n                      })\n\n                      blockPath = block?.[1] ?? path.slice(0, 1)\n                    }\n\n                    const range = Editor.range(editor, blockPath)\n                    Transforms.select(editor, range)\n                    return\n                  }\n\n                  if (readOnly) {\n                    return\n                  }\n\n                  const start = Editor.start(editor, path)\n                  const end = Editor.end(editor, path)\n                  const startVoid = Editor.void(editor, { at: start })\n                  const endVoid = Editor.void(editor, { at: end })\n\n                  if (\n                    startVoid &&\n                    endVoid &&\n                    Path.equals(startVoid[1], endVoid[1])\n                  ) {\n                    const range = Editor.range(editor, start)\n                    Transforms.select(editor, range)\n                  }\n                }\n              },\n              [editor, attributes.onClick, readOnly]\n            )}\n            onCompositionEnd={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  if (ReactEditor.isComposing(editor)) {\n                    Promise.resolve().then(() => {\n                      setIsComposing(false)\n                      IS_COMPOSING.set(editor, false)\n                    })\n                  }\n\n                  androidInputManagerRef.current?.handleCompositionEnd(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionEnd) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  // COMPAT: In Chrome, `beforeinput` events for compositions\n                  // aren't correct and never fire the \"insertFromComposition\"\n                  // type that we need. So instead, insert whenever a composition\n                  // ends since it will already have been committed to the DOM.\n                  if (\n                    !IS_WEBKIT &&\n                    !IS_FIREFOX_LEGACY &&\n                    !IS_IOS &&\n                    !IS_WECHATBROWSER &&\n                    !IS_UC_MOBILE &&\n                    event.data\n                  ) {\n                    const placeholderMarks =\n                      EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n                    EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                    // Ensure we insert text with the marks the user was actually seeing\n                    if (placeholderMarks !== undefined) {\n                      EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                      editor.marks = placeholderMarks\n                    }\n\n                    Editor.insertText(editor, event.data)\n\n                    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                    EDITOR_TO_USER_MARKS.delete(editor)\n                    if (userMarks !== undefined) {\n                      editor.marks = userMarks\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionEnd, editor]\n            )}\n            onCompositionUpdate={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCompositionUpdate)\n                ) {\n                  if (!ReactEditor.isComposing(editor)) {\n                    setIsComposing(true)\n                    IS_COMPOSING.set(editor, true)\n                  }\n                }\n              },\n              [attributes.onCompositionUpdate, editor]\n            )}\n            onCompositionStart={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  androidInputManagerRef.current?.handleCompositionStart(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionStart) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  setIsComposing(true)\n\n                  const { selection } = editor\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                    return\n                  }\n                }\n              },\n              [attributes.onCompositionStart, editor]\n            )}\n            onCopy={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCopy) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'copy'\n                  )\n                }\n              },\n              [attributes.onCopy, editor]\n            )}\n            onCut={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCut) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'cut'\n                  )\n                  const { selection } = editor\n\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                    } else {\n                      const node = Node.parent(editor, selection.anchor.path)\n                      if (Editor.isVoid(editor, node)) {\n                        Transforms.delete(editor)\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onCut]\n            )}\n            onDragOver={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragOver)\n                ) {\n                  // Only when the target is void, call `preventDefault` to signal\n                  // that drops are allowed. Editable content is droppable by\n                  // default, and calling `preventDefault` hides the cursor.\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n\n                  if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n                    event.preventDefault()\n                  }\n                }\n              },\n              [attributes.onDragOver, editor]\n            )}\n            onDragStart={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragStart)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n                  const voidMatch =\n                    (Element.isElement(node) && Editor.isVoid(editor, node)) ||\n                    Editor.void(editor, { at: path, voids: true })\n\n                  // If starting a drag on a void node, make sure it is selected\n                  // so that it shows up in the selection's fragment.\n                  if (voidMatch) {\n                    const range = Editor.range(editor, path)\n                    Transforms.select(editor, range)\n                  }\n\n                  state.isDraggingInternally = true\n\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.dataTransfer,\n                    'drag'\n                  )\n                }\n              },\n              [readOnly, editor, attributes.onDragStart, state]\n            )}\n            onDrop={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDrop)\n                ) {\n                  event.preventDefault()\n\n                  // Keep a reference to the dragged range before updating selection\n                  const draggedRange = editor.selection\n\n                  // Find the range where the drop happened\n                  const range = ReactEditor.findEventRange(editor, event)\n                  const data = event.dataTransfer\n\n                  Transforms.select(editor, range)\n\n                  if (state.isDraggingInternally) {\n                    if (\n                      draggedRange &&\n                      !Range.equals(draggedRange, range) &&\n                      !Editor.void(editor, { at: range, voids: true })\n                    ) {\n                      Transforms.delete(editor, {\n                        at: draggedRange,\n                      })\n                    }\n                  }\n\n                  ReactEditor.insertData(editor, data)\n\n                  // When dragging from another source into the editor, it's possible\n                  // that the current editor does not have focus.\n                  if (!ReactEditor.isFocused(editor)) {\n                    ReactEditor.focus(editor)\n                  }\n                }\n\n                state.isDraggingInternally = false\n              },\n              [readOnly, editor, attributes.onDrop, state]\n            )}\n            onDragEnd={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  state.isDraggingInternally &&\n                  attributes.onDragEnd &&\n                  ReactEditor.hasTarget(editor, event.target)\n                ) {\n                  attributes.onDragEnd(event)\n                }\n\n                // When dropping on a different droppable element than the current editor,\n                // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n                // Note: `onDragEnd` is only called when `onDrop` is not called\n                state.isDraggingInternally = false\n              },\n              [readOnly, state, attributes, editor]\n            )}\n            onFocus={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  !state.isUpdatingSelection &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onFocus)\n                ) {\n                  const el = ReactEditor.toDOMNode(editor, editor)\n                  const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                  state.latestElement = root.activeElement\n\n                  // COMPAT: If the editor has nested editable elements, the focus\n                  // can go to them. In Firefox, this must be prevented because it\n                  // results in issues with keyboard navigation. (2017/03/30)\n                  if (IS_FIREFOX && event.target !== el) {\n                    el.focus()\n                    return\n                  }\n\n                  IS_FOCUSED.set(editor, true)\n                }\n              },\n              [readOnly, state, editor, attributes.onFocus]\n            )}\n            onKeyDown={useCallback(\n              (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target)\n                ) {\n                  androidInputManagerRef.current?.handleKeyDown(event)\n\n                  const { nativeEvent } = event\n\n                  // COMPAT: The composition end event isn't fired reliably in all browsers,\n                  // so we sometimes might end up stuck in a composition state even though we\n                  // aren't composing any more.\n                  if (\n                    ReactEditor.isComposing(editor) &&\n                    nativeEvent.isComposing === false\n                  ) {\n                    IS_COMPOSING.set(editor, false)\n                    setIsComposing(false)\n                  }\n\n                  if (\n                    isEventHandled(event, attributes.onKeyDown) ||\n                    ReactEditor.isComposing(editor)\n                  ) {\n                    return\n                  }\n\n                  const { selection } = editor\n                  const element =\n                    editor.children[\n                      selection !== null ? selection.focus.path[0] : 0\n                    ]\n                  const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                  // COMPAT: Since we prevent the default behavior on\n                  // `beforeinput` events, the browser doesn't think there's ever\n                  // any history stack to undo or redo, so we have to manage these\n                  // hotkeys ourselves. (2019/11/06)\n                  if (Hotkeys.isRedo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.redo === 'function') {\n                      maybeHistoryEditor.redo()\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isUndo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.undo === 'function') {\n                      maybeHistoryEditor.undo()\n                    }\n\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't handle the selection updates\n                  // properly. In Chrome, the selection isn't properly extended.\n                  // And in Firefox, the selection isn't properly collapsed.\n                  // (2017/10/17)\n                  if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', reverse: true })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line' })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, {\n                      unit: 'line',\n                      edge: 'focus',\n                      reverse: true,\n                    })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                    return\n                  }\n\n                  // COMPAT: If a void node is selected, or a zero-width text node\n                  // adjacent to an inline is selected, we need to handle these\n                  // hotkeys manually because browsers won't be able to skip over\n                  // the void node with the zero-width space not being an empty\n                  // string.\n                  if (Hotkeys.isMoveBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: !isRTL })\n                    } else {\n                      Transforms.collapse(editor, {\n                        edge: isRTL ? 'end' : 'start',\n                      })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: isRTL })\n                    } else {\n                      Transforms.collapse(editor, {\n                        edge: isRTL ? 'start' : 'end',\n                      })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to guessing at the input intention for hotkeys.\n                  // COMPAT: In iOS, some of these hotkeys are handled in the\n                  if (!HAS_BEFORE_INPUT_SUPPORT) {\n                    // We don't have a core behavior for these, but they change the\n                    // DOM if we don't prevent them, so we have to.\n                    if (\n                      Hotkeys.isBold(nativeEvent) ||\n                      Hotkeys.isItalic(nativeEvent) ||\n                      Hotkeys.isTransposeCharacter(nativeEvent)\n                    ) {\n                      event.preventDefault()\n                      return\n                    }\n\n                    if (Hotkeys.isSoftBreak(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertSoftBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isSplitBlock(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n                  } else {\n                    if (IS_CHROME || IS_WEBKIT) {\n                      // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                      // an event when deleting backwards in a selected void inline node\n                      if (\n                        selection &&\n                        (Hotkeys.isDeleteBackward(nativeEvent) ||\n                          Hotkeys.isDeleteForward(nativeEvent)) &&\n                        Range.isCollapsed(selection)\n                      ) {\n                        const currentNode = Node.parent(\n                          editor,\n                          selection.anchor.path\n                        )\n\n                        if (\n                          Element.isElement(currentNode) &&\n                          Editor.isVoid(editor, currentNode) &&\n                          (Editor.isInline(editor, currentNode) ||\n                            Editor.isBlock(editor, currentNode))\n                        ) {\n                          event.preventDefault()\n                          Editor.deleteBackward(editor, { unit: 'block' })\n\n                          return\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onKeyDown]\n            )}\n            onPaste={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onPaste)\n                ) {\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to React's `onPaste` here instead.\n                  // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                  // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                  // COMPAT: Safari InputEvents generated by pasting won't include\n                  // application/x-slate-fragment items, so use the\n                  // ClipboardEvent here. (2023/03/15)\n                  if (\n                    !HAS_BEFORE_INPUT_SUPPORT ||\n                    isPlainTextOnlyPaste(event.nativeEvent) ||\n                    IS_WEBKIT\n                  ) {\n                    event.preventDefault()\n                    ReactEditor.insertData(editor, event.clipboardData)\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onPaste]\n            )}\n          >\n            <Children\n              decorations={decorations}\n              node={editor}\n              renderElement={renderElement}\n              renderPlaceholder={renderPlaceholder}\n              renderLeaf={renderLeaf}\n              selection={editor.selection}\n            />\n          </Component>\n        </RestoreDOM>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n", "import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>(null as any as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          if (err instanceof Error) {\n            latestSubscriptionCallbackError.current = err\n          } else {\n            latestSubscriptionCallbackError.current = new Error(String(err))\n          }\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback(\n    (editor: Editor) => {\n      slateRef.editor = editor\n      eventListeners.forEach((listener: EditorChangeHandler) =>\n        listener(editor)\n      )\n    },\n    [eventListeners, slateRef]\n  )\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n", "import React, { useCallback, useEffect, useState } from 'react'\nimport { Descendant, Editor, Node, Operation, Scrubber, Selection } from 'slate'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  initialValue: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n  onSelectionChange?: (selection: Selection) => void\n  onValueChange?: (value: Descendant[]) => void\n}) => {\n  const {\n    editor,\n    children,\n    onChange,\n    onSelectionChange,\n    onValueChange,\n    initialValue,\n    ...rest\n  } = props\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\n        `[Slate] initialValue is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          initialValue\n        )}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = initialValue\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const { selectorContext, onChange: handleSelectorChange } =\n    useSelectorContext(editor)\n\n  const onContextChange = useCallback(\n    (options?: { operation?: Operation }) => {\n      if (onChange) {\n        onChange(editor.children)\n      }\n\n      switch (options?.operation?.type) {\n        case 'set_selection':\n          onSelectionChange?.(editor.selection)\n          break\n        default:\n          onValueChange?.(editor.children)\n      }\n\n      setContext(prevContext => ({\n        v: prevContext.v + 1,\n        editor,\n      }))\n      handleSelectorChange(editor)\n    },\n    [editor, handleSelectorChange, onChange, onSelectionChange, onValueChange]\n  )\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n", "import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n", "/**\n * Utilities for single-line deletion\n */\n\nimport { Editor, Range } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n", "import ReactDOM from 'react-dom'\nimport {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Operation,\n  Path,\n  PathRef,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport { ReactEditor } from './react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Element.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n    const pathRefMatches: [PathRef, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n\n        let changedPath: Path\n        if (Path.isBefore(op.path, op.newPath)) {\n          matches.push(...getMatches(e, Path.parent(op.path)))\n          changedPath = op.newPath\n        } else {\n          matches.push(...getMatches(e, Path.parent(op.newPath)))\n          changedPath = op.path\n        }\n\n        const changedNode = Node.get(editor, Path.parent(changedPath))\n        const changedNodeKey = ReactEditor.findKey(e, changedNode)\n        const changedPathRef = Editor.pathRef(e, Path.parent(changedPath))\n        pathRefMatches.push([changedPathRef, changedNodeKey])\n\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n\n    for (const [pathRef, key] of pathRefMatches) {\n      if (pathRef.current) {\n        const [node] = Editor.node(e, pathRef.current)\n        NODE_TO_KEY.set(node, key)\n      }\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData(`application/${clipboardFormatKey}`, encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData(`application/${clipboardFormatKey}`) ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    const maybeBatchUpdates =\n      REACT_MAJOR_VERSION < 18\n        ? ReactDOM.unstable_batchedUpdates\n        : (callback: () => void) => callback()\n\n    maybeBatchUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange(options)\n      }\n\n      onChange(options)\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n"],
  "mappings": "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",
  "names": ["Symbol", "Symbol", "e", "Symbol", "debounce", "time", "debounce", "throttle", "isHotkey", "check", "e", "isElement", "el", "nodeType", "canOverflow", "overflow", "skipOverflowHiddenElements", "isScrollable", "clientHeight", "scrollHeight", "clientWidth", "scrollWidth", "style", "getComputedStyle", "overflowY", "overflowX", "frame", "ownerDocument", "defaultView", "frameElement", "e", "alignNearest", "scrollingEdgeStart", "scrollingEdgeEnd", "scrollingSize", "scrollingBorderStart", "scrollingBorderEnd", "elementEdgeStart", "elementEdgeEnd", "elementSize", "getParentElement", "element", "parent", "parentElement", "getRootNode", "host", "compute", "target", "options", "_a", "_b", "_c", "_d", "document", "scrollMode", "block", "inline", "boundary", "checkBoundary", "node", "TypeError", "scrollingElement", "documentElement", "frames", "cursor", "push", "body", "viewportWidth", "window", "visualViewport", "width", "innerWidth", "viewportHeight", "height", "innerHeight", "scrollX", "scrollY", "targetHeight", "targetWidth", "top", "targetTop", "right", "targetRight", "bottom", "targetBottom", "left", "targetLeft", "getBoundingClientRect", "marginTop", "marginRight", "marginBottom", "marginLeft", "computedStyle", "parseFloat", "scrollMarginTop", "scrollMarginRight", "scrollMarginBottom", "scrollMarginLeft", "targetBlock", "targetInline", "computations", "index", "length", "frameStyle", "borderLeft", "parseInt", "borderLeftWidth", "borderTop", "borderTopWidth", "borderRight", "borderRightWidth", "borderBottom", "borderBottomWidth", "blockScroll", "inlineScroll", "scrollbarWidth", "offsetWidth", "scrollbarHeight", "offsetHeight", "scaleX", "scaleY", "Math", "max", "scrollLeft", "scrollTop", "min", "getOptions", "options", "block", "inline", "Object", "keys", "length", "scrollIntoView", "target", "isConnected", "element", "currentElement", "parentNode", "document", "ShadowRoot", "host", "margins", "computedStyle", "window", "getComputedStyle", "top", "parseFloat", "scrollMarginTop", "right", "scrollMarginRight", "bottom", "scrollMarginBottom", "left", "scrollMarginLeft", "behavior", "compute", "el", "adjustedTop", "adjustedLeft", "scroll", "ResizeObserverBoxOptions", "ResizeObserverSize", "DOMRectReadOnly", "global", "global", "ResizeObserverEntry", "callbacks", "ResizeObserver", "Scheduler", "global", "n", "ResizeObservation", "size", "ResizeObserverDetail", "ResizeObserverController", "ResizeObserver", "objectWithoutPropertiesLoose", "o", "toPrimitive", "toPropertyKey", "EditorContext", "createContext", "useSlateStatic", "editor", "useContext", "Error", "REACT_MAJOR_VERSION", "parseInt", "React", "version", "split", "IS_IOS", "navigator", "window", "test", "userAgent", "MSStream", "IS_APPLE", "IS_ANDROID", "IS_FIREFOX", "IS_WEBKIT", "IS_EDGE_LEGACY", "IS_CHROME", "IS_CHROME_LEGACY", "IS_ANDROID_CHROME_LEGACY", "IS_FIREFOX_LEGACY", "IS_UC_MOBILE", "IS_WECHATBROWSER", "CAN_USE_DOM", "document", "createElement", "IS_SAFARI_LEGACY", "_navigator$userAgent$", "match", "_navigator$userAgent$2", "HAS_BEFORE_INPUT_SUPPORT", "globalThis", "InputEvent", "prototype", "getTargetRanges", "NODE_TO_INDEX", "WeakMap", "NODE_TO_PARENT", "EDITOR_TO_WINDOW", "EDITOR_TO_ELEMENT", "EDITOR_TO_PLACEHOLDER_ELEMENT", "ELEMENT_TO_NODE", "NODE_TO_ELEMENT", "NODE_TO_KEY", "EDITOR_TO_KEY_TO_ELEMENT", "IS_READ_ONLY", "IS_FOCUSED", "IS_COMPOSING", "EDITOR_TO_USER_SELECTION", "EDITOR_TO_ON_CHANGE", "EDITOR_TO_SCHEDULE_FLUSH", "EDITOR_TO_PENDING_INSERTION_MARKS", "EDITOR_TO_USER_MARKS", "EDITOR_TO_PENDING_DIFFS", "EDITOR_TO_PENDING_ACTION", "EDITOR_TO_PENDING_SELECTION", "EDITOR_TO_FORCE_RENDER", "PLACEHOLDER_SYMBOL", "Symbol", "MARK_PLACEHOLDER_SYMBOL", "DOMText", "Text", "getDefaultView", "value", "ownerDocument", "defaultView", "isDOMComment", "isDOMNode", "nodeType", "isDOMElement", "Node", "isDOMSelection", "anchorNode", "Selection", "isDOMText", "isPlainTextOnlyPaste", "event", "clipboardData", "getData", "types", "length", "normalizeDOMPoint", "domPoint", "node", "offset", "childNodes", "isLast", "index", "getEditableChildAndIndex", "i", "getEditableChild", "textContent", "hasShadowRoot", "parent", "parentNode", "toString", "direction", "child", "triedForward", "triedBackward", "getAttribute", "getPlainText", "domNode", "text", "nodeValue", "childNode", "Array", "from", "display", "getComputedStyle", "getPropertyValue", "tagName", "catchSlateFragment", "getSlateFragmentAttribute", "dataTransfer", "htmlData", "fragment", "isTrackedMutation", "mutation", "batch", "target", "matches", "ReactEditor", "getWindow", "contains", "hasDOMNode", "editable", "parentMutation", "find", "_ref", "addedNodes", "removedNodes", "getActiveElement", "activeElement", "_activeElement", "shadowRoot", "_activeElement$shadow", "_activeElement2", "n", "Key", "constructor", "_defineProperty", "id", "concat", "androidPendingDiffs", "get", "androidScheduleFlush", "_EDITOR_TO_SCHEDULE_F", "blur", "el", "toDOMNode", "root", "findDocumentOrShadowRoot", "set", "deselect", "selection", "domSelection", "getSelection", "rangeCount", "removeAllRanges", "Transforms", "getRootNode", "Document", "ShadowRoot", "findEventRange", "nativeEvent", "clientX", "x", "clientY", "y", "toSlateNode", "path", "findPath", "Element", "isElement", "Editor", "isVoid", "rect", "getBoundingClientRect", "isPrev", "isInline", "left", "width", "top", "height", "edge", "point", "before", "after", "range", "domRange", "caretRangeFromPoint", "position", "caretPositionFromPoint", "createRange", "setStart", "offsetNode", "setEnd", "toSlateRange", "exactMatch", "suppressThrow", "findKey", "key", "isEditor", "unshift", "Scrubber", "stringify", "focus", "options", "arguments", "undefined", "retries", "operations", "setTimeout", "toDOMRange", "addRange", "select", "start", "onChange", "preventScroll", "editorEl", "targetEl", "parentElement", "err", "message", "includes", "closest", "isContentEditable", "hasEditableTarget", "hasRange", "anchor", "hasPath", "hasSelectableTarget", "isTargetInsideNonReadonlyVoid", "hasTarget", "insertData", "data", "insertFragmentData", "insertTextData", "isComposing", "isFocused", "isReadOnly", "slateNode", "setFragmentData", "originEvent", "KEY_TO_ELEMENT", "toDOMPoint", "void", "at", "selector", "texts", "querySelectorAll", "attr", "trueLength", "end", "nextText", "hasAttribute", "_nextText$textContent", "domText", "startsWith", "Math", "min", "max", "isBackward", "Range", "domAnchor", "domFocus", "isCollapsed", "startNode", "startOffset", "endNode", "endOffset", "startEl", "isStartAtZeroWidth", "endEl", "isEndAtZeroWidth", "domEl", "toSlatePoint", "nearestNode", "nearestOffset", "textNode", "_domNode$textContent", "_domNode$textContent2", "potentialVoidNode", "voidNode", "leafNode", "contents", "cloneContents", "removals", "slice", "call", "forEach", "textContext", "removeChild", "leafNodes", "current", "endsWith", "querySelector", "_focusNode$textConten", "startContainer", "anchorOffset", "focusNode", "focusOffset", "firstRange", "getRangeAt", "lastRange", "HTMLTableRowElement", "getLastChildren", "element", "childElementCount", "children", "firstNodeRow", "lastNodeRow", "firstNode", "lastNode", "HTMLElement", "innerHTML", "endContainer", "collapsed", "_anchorNode$textConte", "isExpanded", "isForward", "mode", "unhangRange", "voids", "verifyDiffState", "textDiff", "diff", "isText", "nextPath", "Path", "next", "nextNode", "applyStringDiff", "_len", "diffs", "_key", "reduce", "longestCommonPrefixLength", "str", "another", "charAt", "longestCommonSuffixLength", "normalizeStringDiff", "targetText", "removedText", "prefixLength", "suffixLength", "normalized", "mergeStringDiffs", "a", "b", "overlap", "applied", "sliceEnd", "targetRange", "normalizePoint", "leaf", "parentBlock", "above", "isBlock", "entry", "isDescendant", "normalizeRange", "transformPendingPoint", "op", "pendingDiffs", "equals", "Point", "transform", "affinity", "transformed", "type", "transformPendingRange", "transformTextDiff", "newPath", "RESOLVE_DELAY", "FLUSH_DELAY", "debug", "isDataTransfer", "name", "createAndroidInputManager", "scheduleOnDOMSelectionChange", "onDOMSelectionChange", "flushing", "compositionEndTimeoutId", "flushTimeoutId", "actionTimeoutId", "idCounter", "insertPositionHint", "applyPendingSelection", "pendingSelection", "delete", "performAction", "action", "isPoint", "run", "flush", "clearTimeout", "hasPendingDiffs", "hasPendingAction", "selectionRef", "rangeRef", "marks", "scheduleSelectionChange", "_EDITOR_TO_PENDING_DI", "_EDITOR_TO_PENDING_DI2", "pendingMarks", "insertText", "deleteFragment", "filter", "_ref2", "cancel", "unref", "userMarks", "handleCompositionEnd", "_event", "handleCompositionStart", "updatePlaceholderVisibility", "forceHide", "placeholderElement", "style", "removeProperty", "storeDiff", "_EDITOR_TO_PENDING_DI3", "idx", "findIndex", "change", "push", "merged", "splice", "_objectSpread", "scheduleAction", "handleDOMBeforeInput", "_targetRange2", "inputType", "nativeTargetRange", "canStoreDiff", "edges", "relevantPendingDiffs", "handleUserSelect", "targetNode", "deleteForward", "_nativeTargetRange", "nativeCollapsed", "deleteBackward", "unit", "insertSoftBreak", "insertBreak", "replace", "parts", "line", "hintPosition", "search", "diffPosition", "scheduleFlush", "_EDITOR_TO_PENDING_DI4", "hasPendingChanges", "isFlushing", "pathChanged", "parentPathChanged", "handleInput", "handleKeyDown", "_", "handleDomMutations", "mutations", "some", "_EDITOR_TO_FORCE_REND", "useIsMounted", "isMountedRef", "useRef", "useEffect", "useIsomorphicLayoutEffect", "useLayoutEffect", "useMutationObserver", "callback", "mutationObserver", "useState", "MutationObserver", "takeRecords", "observe", "disconnect", "MUTATION_OBSERVER_CONFIG", "subtree", "childList", "characterData", "useAndroidInputManager", "_objectWithoutProperties", "_excluded", "isMounted", "inputManager", "shallowCompare", "obj1", "obj2", "Object", "keys", "every", "hasOwnProperty", "isDecorationFlagsEqual", "other", "rangeOwnProps", "otherOwnProps", "_excluded2", "isElementDecorationsEqual", "list", "isTextDecorationsEqual", "String", "props", "parentPath", "isMarkPlaceholder", "Boolean", "ZeroWidthString", "string", "isLineBreak", "TextString", "isTrailing", "ref", "getTextContent", "initialText", "textWithTrailing", "MemoizedText", "memo", "forwardRef", "attributes", "PLACEHOLDER_DELAY", "disconnectPlaceholderResizeObserver", "placeholderResizeObserver", "releaseObserver", "clearTimeoutRef", "timeoutRef", "Leaf", "renderPlaceholder", "renderLeaf", "DefaultLeaf", "placeholderRef", "showPlaceholder", "setShowPlaceholder", "showPlaceholderTimeoutRef", "callbackPlaceholderRef", "useCallback", "placeholderEl", "_leaf$onPlaceholderRe", "onPlaceholderResize", "ResizeObserver", "ResizeObserverPolyfill", "_leaf$onPlaceholderRe2", "leafIsPlaceholder", "placeholderProps", "placeholder", "pointerEvents", "maxWidth", "opacity", "userSelect", "textDecoration", "WebkitUserModify", "contentEditable", "Fragment", "MemoizedLeaf", "prev", "decorations", "leaves", "SlateText", "callbackRef", "span", "renderElement", "p", "DefaultElement", "readOnly", "useReadOnly", "useChildren", "hasInlines", "dir", "getDirection", "Tag", "color", "outline", "MemoizedElement", "DecorateContext", "useDecorate", "SelectedContext", "useSelected", "decorate", "isLeafBlock", "sel", "intersection", "ds", "dec", "d", "Provider", "ElementComponent", "TextComponent", "ReadOnlyContext", "SlateContext", "useSlate", "context", "useSlateWithV", "useTrackUserInput", "receivedUserInput", "animationFrameIdRef", "onUserInput", "cancelAnimationFrame", "requestAnimationFrame", "TRIPLE_CLICK", "HOTKEYS", "bold", "compose", "moveBackward", "moveForward", "moveWordBackward", "moveWordForward", "extendBackward", "extendForward", "italic", "splitBlock", "undo", "APPLE_HOTKEYS", "moveLineBackward", "moveLineForward", "deleteLineBackward", "deleteLineForward", "deleteWordBackward", "deleteWordForward", "extendLineBackward", "extendLineForward", "redo", "transposeCharacter", "WINDOWS_HOTKEYS", "create", "generic", "apple", "windows", "isGeneric", "isHotkey", "isApple", "isWindows", "isBold", "isCompose", "isMoveBackward", "isMoveForward", "isDeleteBackward", "isDeleteForward", "isDeleteLineBackward", "isDeleteLineForward", "isDeleteWordBackward", "isDeleteWordForward", "isExtendBackward", "isExtendForward", "isExtendLineBackward", "isExtendLineForward", "isItalic", "isMoveLineBackward", "isMoveLineForward", "isMoveWordBackward", "isMoveWordForward", "isRedo", "isSoftBreak", "isSplitBlock", "isTransposeCharacter", "isUndo", "createRestoreDomManager", "bufferedMutations", "clear", "registerMutations", "trackedMutations", "restoreDOM", "reverse", "insertBefore", "nextSibling", "characterDataOldValue", "RestoreDOMComponent", "Component", "_this$mutationObserve", "componentDidMount", "manager", "getSnapshotBeforeUpdate", "_this$mutationObserve2", "_this$mutationObserve3", "_this$manager2", "pendingMutations", "_this$manager", "componentDidUpdate", "_this$manager3", "componentWillUnmount", "_this$mutationObserve4", "render", "RestoreDOM", "Children", "Editable", "defaultRenderPlaceholder", "DefaultPlaceholder", "autoFocus", "defaultDecorate", "onDOMBeforeInput", "propsOnDOMBeforeInput", "scrollSelectionIntoView", "defaultScrollSelectionIntoView", "userStyle", "as", "disableDefaultStyles", "setIsComposing", "deferredOperations", "placeholderHeight", "setPlaceholderHeight", "processing", "forceRender", "useReducer", "s", "state", "useMemo", "isDraggingInternally", "isUpdatingSelection", "latestElement", "hasMarkPlaceholder", "androidInputManagerRef", "throttle", "active", "execCommand", "androidInputManager", "anchorNodeSelectable", "focusNodeSelectable", "debounce", "_androidInputManagerR", "_androidInputManagerR2", "setDomSelection", "forceChange", "hasDomSelection", "editorElement", "hasDomSelectionInEditor", "slateRange", "_anchorNode", "newDomRange", "collapseToEnd", "setBaseAndExtent", "ensureSelection", "timeoutId", "animationFrameId", "ensureDomSelection", "e", "ranges", "newRange", "preventDefault", "stopImmediatePropagation", "isDOMEventHandled", "_EDITOR_TO_USER_SELEC", "isCompositionChange", "native", "_node$parentElement", "_window$getComputedSt", "_lastText$textContent", "lastText", "createTreeWalker", "NodeFilter", "SHOW_TEXT", "lastChild", "whiteSpace", "block", "toRestore", "removeEventListener", "addEventListener", "placeHolderResizeHandler", "_placeholderEl$getBou", "rest", "loose", "unset", "fromEntries", "map", "mark", "role", "spellCheck", "autoCorrect", "autoCapitalize", "zindex", "suppressContentEditableWarning", "wordWrap", "minHeight", "onBeforeInput", "isEventHandled", "onInput", "onBlur", "relatedTarget", "onClick", "detail", "blockPath", "_block$", "startVoid", "endVoid", "onCompositionEnd", "_androidInputManagerR3", "Promise", "resolve", "then", "placeholderMarks", "onCompositionUpdate", "onCompositionStart", "_androidInputManagerR4", "onCopy", "isDOMEventTargetInput", "onCut", "onDragOver", "onDragStart", "voidMatch", "onDrop", "draggedRange", "onDragEnd", "onFocus", "onKeyDown", "_androidInputManagerR5", "isRTL", "Hotkeys", "maybeHistoryEditor", "move", "collapse", "currentNode", "onPaste", "leafEl", "bind", "scrollIntoView", "scrollMode", "handler", "shouldTreatEventAsHandled", "isDefaultPrevented", "isPropagationStopped", "HTMLInputElement", "HTMLTextAreaElement", "defaultPrevented", "FocusedContext", "useFocused", "isError", "error", "SlateSelectorContext", "refEquality", "useSlateSelector", "equalityFn", "getSlate", "latestSubscriptionCallbackError", "latestSelector", "latestSelectedState", "selectedState", "stack", "checkForUpdates", "newSelectedState", "unsubscribe", "useSelectorContext", "eventListeners", "slateRef", "listener", "selectorContext", "indexOf", "Slate", "onSelectionChange", "onValueChange", "initialValue", "setContext", "isNodeList", "assign", "v", "handleSelectorChange", "onContextChange", "_options$operation", "operation", "prevContext", "setIsFocused", "fn", "useEditor", "useSlateSelection", "isSelectionEqual", "doRectsIntersect", "compareRect", "middle", "bottom", "areRangesSameLine", "range1", "range2", "rect1", "rect2", "findCurrentLineRange", "parentRange", "parentRangeBoundary", "positions", "right", "floor", "withReact", "clipboardFormatKey", "apply", "addMark", "removeMark", "parentBlockEntry", "parentBlockPath", "parentElementRange", "currentLineRange", "pathRefMatches", "pendingAction", "getMatches", "prevPath", "previous", "commonPath", "common", "changedPath", "isBefore", "changedNode", "changedNodeKey", "changedPathRef", "pathRef", "attach", "trim", "r", "cloneRange", "setEndAfter", "zw", "isNewline", "appendChild", "getFragment", "JSON", "encoded", "btoa", "encodeURIComponent", "setAttribute", "setData", "div", "body", "decoded", "decodeURIComponent", "atob", "parsed", "parse", "insertFragment", "lines", "splitNodes", "always", "maybeBatchUpdates", "ReactDOM", "unstable_batchedUpdates", "levels"]
}
